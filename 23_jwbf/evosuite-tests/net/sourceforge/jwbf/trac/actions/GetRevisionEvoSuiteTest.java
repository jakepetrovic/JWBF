/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.jwbf.trac.actions;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.jwbf.core.actions.Get;
import net.sourceforge.jwbf.core.actions.Post;
import net.sourceforge.jwbf.core.actions.util.HttpAction;
import net.sourceforge.jwbf.core.actions.util.ProcessException;
import net.sourceforge.jwbf.core.contentRep.SimpleArticle;
import net.sourceforge.jwbf.trac.actions.GetRevision;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GetRevisionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GetRevision getRevision0 = new GetRevision("`");
      assertNotNull(getRevision0);
      
      SimpleArticle simpleArticle0 = getRevision0.getArticle();
      assertEquals("`", simpleArticle0.getTitle());
      assertNotNull(simpleArticle0);
  }

  @Test
  public void test1()  throws Throwable  {
      GetRevision getRevision0 = new GetRevision("`");
      assertNotNull(getRevision0);
      
      boolean boolean0 = getRevision0.isSelfExecuter();
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      GetRevision getRevision0 = null;
      try {
        getRevision0 = new GetRevision("");
        fail("Expecting exception: ProcessException");
      } catch(ProcessException e) {
        /*
         * articlename is empty
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      GetRevision getRevision0 = new GetRevision("Parser configratiow errr occurred");
      Post post0 = new Post("Parser configratiow errr occurred");
      String string0 = getRevision0.processReturningText("Parser configratiow errr occurred", (HttpAction) post0);
      assertEquals("", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      GetRevision getRevision0 = new GetRevision("d>E@?");
      assertNotNull(getRevision0);
      
      Get get0 = (Get)getRevision0.getNextMessage();
      assertNotNull(get0);
      
      String string0 = getRevision0.processReturningText("d>E@?", (HttpAction) get0);
      assertNotNull(string0);
      assertEquals("utf-8/d>E@??format=txt", get0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      GetRevision getRevision0 = new GetRevision("d>E@?");
      assertNotNull(getRevision0);
      
      Get get0 = (Get)getRevision0.getNextMessage();
      assertEquals("utf-8/d>E@??format=txt", get0.toString());
      assertNotNull(get0);
      
      Get get1 = (Get)getRevision0.getNextMessage();
      assertNotNull(get1);
      
      String string0 = getRevision0.processReturningText("", (HttpAction) get1);
      assertEquals(true, getRevision0.hasMoreMessages());
      assertNotNull(string0);
      assertEquals("utf-8/d>E@?", get1.toString());
      assertNotSame(get1, get0);
  }

  @Test
  public void test6()  throws Throwable  {
      GetRevision getRevision0 = new GetRevision("`");
      String string0 = getRevision0.processReturningText("`", (HttpAction) null);
      assertEquals("", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      GetRevision getRevision0 = new GetRevision("`");
      assertNotNull(getRevision0);
      
      boolean boolean0 = getRevision0.hasMoreMessages();
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      GetRevision getRevision0 = new GetRevision("Parser configratiow errr occurred");
      assertNotNull(getRevision0);
      
      Get get0 = (Get)getRevision0.getNextMessage();
      assertNotNull(get0);
      assertEquals("utf-8/Parser configratiow errr occurred?format=txt", get0.toString());
      
      boolean boolean0 = getRevision0.hasMoreMessages();
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      GetRevision getRevision0 = new GetRevision("Parser configratiow errr occurred");
      assertNotNull(getRevision0);
      
      Get get0 = (Get)getRevision0.getNextMessage();
      assertNotNull(get0);
      assertEquals("utf-8/Parser configratiow errr occurred?format=txt", get0.toString());
      
      Get get1 = (Get)getRevision0.getNextMessage();
      assertNotNull(get1);
      assertEquals("utf-8/Parser configratiow errr occurred", get1.toString());
      
      boolean boolean0 = getRevision0.hasMoreMessages();
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      GetRevision getRevision0 = new GetRevision("Parser configratiow errr occurred");
      assertNotNull(getRevision0);
      
      getRevision0.getNextMessage();
      getRevision0.getNextMessage();
      getRevision0.getNextMessage();
      boolean boolean0 = getRevision0.hasMoreMessages();
      assertEquals(false, getRevision0.hasMoreMessages());
      assertEquals(false, boolean0);
  }
}
