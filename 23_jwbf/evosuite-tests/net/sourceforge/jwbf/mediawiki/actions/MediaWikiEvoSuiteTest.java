/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.jwbf.mediawiki.actions;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.jwbf.mediawiki.actions.MediaWiki;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MediaWikiEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      String string0 = MediaWiki.getCharset();
      assertEquals("UTF-8", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      String string0 = MediaWiki.encode("");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      String string0 = MediaWiki.decode(";je)uu$;cR6p3%`ad");
      assertEquals(";je)uu$;cR6p3%`ad", string0);
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      MediaWiki.Version mediaWiki_Version0 = MediaWiki.Version.MW1_09;
      boolean boolean0 = mediaWiki_Version0.greaterEqThen(mediaWiki_Version0);
      assertEquals("1.9", mediaWiki_Version0.getNumber());
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      MediaWiki.Version mediaWiki_Version0 = MediaWiki.Version.MW1_13;
      MediaWiki.Version mediaWiki_Version1 = MediaWiki.Version.DEVELOPMENT;
      boolean boolean0 = mediaWiki_Version0.greaterEqThen(mediaWiki_Version1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      MediaWiki.Version mediaWiki_Version0 = MediaWiki.Version.getLatest();
      assertEquals(MediaWiki.Version.MW1_18, mediaWiki_Version0);
  }

  @Test
  public void test6()  throws Throwable  {
      MediaWiki.Version[] mediaWiki_VersionArray0 = MediaWiki.Version.valuesStable();
      assertNotNull(mediaWiki_VersionArray0);
  }
}
