/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.jwbf.mediawiki.actions.login;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.Map;
import net.sourceforge.jwbf.core.actions.Post;
import net.sourceforge.jwbf.core.actions.util.CookieException;
import net.sourceforge.jwbf.core.actions.util.HttpAction;
import net.sourceforge.jwbf.mediawiki.actions.login.PostLoginOld;
import net.sourceforge.jwbf.mediawiki.contentRep.LoginData;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestPostLoginOld {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LoginData loginData0 = new LoginData();
      PostLoginOld postLoginOld0 = new PostLoginOld("", "", "", loginData0);
      postLoginOld0.getNextMessage();
  }

  @Test
  public void test1()  throws Throwable  {
      LoginData loginData0 = new LoginData();
      PostLoginOld postLoginOld0 = new PostLoginOld("", "", "", loginData0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>(171);
      Post post0 = new Post("", "");
      try {
        postLoginOld0.validateReturningCookies((Map<String, String>) hashMap0, (HttpAction) post0);
        fail("Expecting exception: CookieException");
      } catch(CookieException e) {
        /*
         * No cookies found.
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LoginData loginData0 = new LoginData();
      PostLoginOld postLoginOld0 = new PostLoginOld("49Y;aYBnd[s^H~@?5rL", "49Y;aYBnd[s^H~@?5rL", "49Y;aYBnd[s^H~@?5rL", loginData0);
      try {
        postLoginOld0.validateAllReturningCookies((Map<String, String>) null);
        fail("Expecting exception: CookieException");
      } catch(CookieException e) {
        /*
         * Cookiearray is null.
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      LoginData loginData0 = new LoginData();
      PostLoginOld postLoginOld0 = new PostLoginOld("", "", "", loginData0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>(171);
      hashMap0.put("", "");
      postLoginOld0.validateAllReturningCookies((Map<String, String>) hashMap0);
      assertEquals(true, loginData0.isLoggedIn());
  }

  @Test
  public void test4()  throws Throwable  {
      LoginData loginData0 = new LoginData();
      PostLoginOld postLoginOld0 = new PostLoginOld("Y42AX/%\"XyX1%'&R", "Y42AX/%\"XyX1%'&R", "Y42AX/%\"XyX1%'&R", loginData0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>(0);
      hashMap0.put("Y42AX/%\"XyX1%'&R", "Y42AX/%\"XyX1%'&R");
      try {
        postLoginOld0.validateAllReturningCookies((Map<String, String>) hashMap0);
        fail("Expecting exception: CookieException");
      } catch(CookieException e) {
        /*
         * Login failed: Check Username and Password.
         */
      }
  }
}
