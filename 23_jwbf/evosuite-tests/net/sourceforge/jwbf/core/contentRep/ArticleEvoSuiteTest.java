/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.jwbf.core.contentRep;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sourceforge.jwbf.core.bots.WikiBot;
import net.sourceforge.jwbf.core.contentRep.Article;
import net.sourceforge.jwbf.core.contentRep.SimpleArticle;
import net.sourceforge.jwbf.mediawiki.bots.MediaWikiBot;
import net.sourceforge.jwbf.zim.bots.ZimWikiBot;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ArticleEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ZimWikiBot zimWikiBot0 = new ZimWikiBot("");
      Article article0 = new Article((WikiBot) zimWikiBot0, "");
      article0.save("");
      article0.addTextnl("");
      assertEquals("\n", article0.getText());
      assertEquals(false, article0.isEmpty());
  }

  @Test
  public void test1()  throws Throwable  {
      ZimWikiBot zimWikiBot0 = new ZimWikiBot("");
      Article article0 = new Article((WikiBot) zimWikiBot0, "");
      article0.delete();
      assertEquals("", article0.getTitle());
  }

  @Test
  public void test2()  throws Throwable  {
      ZimWikiBot zimWikiBot0 = new ZimWikiBot("");
      Article article0 = new Article((WikiBot) zimWikiBot0, "");
      // Undeclared exception!
      try {
        article0.addTextnl("");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * java.io.FileNotFoundException: /.txt (No such file or directory)
         */
      }
      assertEquals("\n", article0.getText());
  }

  @Test
  public void test3()  throws Throwable  {
      ZimWikiBot zimWikiBot0 = new ZimWikiBot("");
      Article article0 = new Article((WikiBot) zimWikiBot0, "");
      article0.clear();
      assertEquals("", article0.getTitle());
  }

  @Test
  public void test4()  throws Throwable  {
      Article article0 = new Article((WikiBot) null, "=$>&Qdm ^&");
      boolean boolean0 = article0.isRedirect();
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      MediaWikiBot mediaWikiBot0 = new MediaWikiBot();
      Article article0 = new Article((WikiBot) mediaWikiBot0, "Z");
      article0.setEditor("Z");
      String string0 = article0.getEditor();
      assertNotNull(string0);
      assertEquals("Z", article0.getEditor());
      assertEquals("Z", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      MediaWikiBot mediaWikiBot0 = new MediaWikiBot();
      SimpleArticle simpleArticle0 = new SimpleArticle("");
      Article article0 = new Article((WikiBot) mediaWikiBot0, simpleArticle0);
      String string0 = article0.getTitle();
      assertEquals("", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      MediaWikiBot mediaWikiBot0 = new MediaWikiBot();
      SimpleArticle simpleArticle0 = new SimpleArticle("");
      Article article0 = new Article((WikiBot) mediaWikiBot0, simpleArticle0);
      article0.setMinorEdit(true);
      assertEquals(true, simpleArticle0.isMinorEdit());
      assertEquals(true, article0.isMinorEdit());
  }

  @Test
  public void test8()  throws Throwable  {
      ZimWikiBot zimWikiBot0 = new ZimWikiBot("!76ePuq Fj;)Dyx");
      Article article0 = new Article((WikiBot) zimWikiBot0, "!76ePuq Fj;)Dyx");
      article0.setTitle("!76ePuq Fj;)Dyx");
      assertEquals("!76ePuq Fj;)Dyx", article0.getTitle());
  }

  @Test
  public void test9()  throws Throwable  {
      MediaWikiBot mediaWikiBot0 = new MediaWikiBot();
      SimpleArticle simpleArticle0 = new SimpleArticle("");
      Article article0 = new Article((WikiBot) mediaWikiBot0, simpleArticle0);
      SimpleArticle simpleArticle1 = article0.getSimpleArticle();
      assertSame(simpleArticle0, simpleArticle1);
  }

  @Test
  public void test10()  throws Throwable  {
      MediaWikiBot mediaWikiBot0 = new MediaWikiBot();
      SimpleArticle simpleArticle0 = new SimpleArticle("");
      Article article0 = new Article((WikiBot) mediaWikiBot0, simpleArticle0);
      // Undeclared exception!
      try {
        article0.addText("");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * please use another constructor or inject net.sourceforge.jwbf.core.bots.HttpBot
         */
      }
      assertEquals("", simpleArticle0.getText());
  }

  @Test
  public void test11()  throws Throwable  {
      Article article0 = new Article((WikiBot) null, "SSRh{b");
      article0.setEditSummary("SSRh{b");
      String string0 = article0.getEditSummary();
      assertEquals("SSRh{b", article0.getEditSummary());
      assertNotNull(string0);
      assertEquals("SSRh{b", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      MediaWikiBot mediaWikiBot0 = new MediaWikiBot();
      Article article0 = new Article((WikiBot) mediaWikiBot0, "Z");
      // Undeclared exception!
      String string0 = "";
      try {
        string0 = article0.getRevisionId();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * please use another constructor or inject net.sourceforge.jwbf.core.bots.HttpBot
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      MediaWikiBot mediaWikiBot0 = new MediaWikiBot();
      Article article0 = new Article((WikiBot) mediaWikiBot0, "Could not find EvaluatorMap");
      // Undeclared exception!
      String string0 = "";
      try {
        string0 = article0.getEditor();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * please use another constructor or inject net.sourceforge.jwbf.core.bots.HttpBot
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      Article article0 = new Article((WikiBot) null, (SimpleArticle) null);
      // Undeclared exception!
      try {
        article0.getEditSummary();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      Article article0 = new Article((WikiBot) null, "U");
      // Undeclared exception!
      boolean boolean0 = false;
      try {
        boolean0 = article0.isMinorEdit();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      Article article0 = new Article((WikiBot) null, "=$>&QRdm ^&");
      // Undeclared exception!
      try {
        article0.getEditTimestamp();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
